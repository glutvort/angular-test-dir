from annoying.decorators import render_to
from django.contrib.auth.models import User
from django_angular_backend.app.models import Contact
from django import template

register = template.Library()

class VerbatimNode(template.Node):

    def __init__(self, text):
        self.text = text

    def render(self, context):
        return self.text

@register.tag
def verbatim(parser, token):
    text = []
    while 1:
        token = parser.tokens.pop(0)
        if token.contents == 'endverbatim':
            break
        if token.token_type == template.TOKEN_VAR:
            text.append('{{')
        elif token.token_type == template.TOKEN_BLOCK:
            text.append('{%')
        text.append(token.contents)
        if token.token_type == template.TOKEN_VAR:
            text.append('}}')
        elif token.token_type == template.TOKEN_BLOCK:
            text.append('%}')
    return VerbatimNode(''.join(text))



@render_to('index.html')
def home(request):
    users = User.objects.filter()
    contacts = Contact.objects.all()

    return {
        'users': users,
        'contacts': contacts,
    }


template.register_template_library('verbatim') 
